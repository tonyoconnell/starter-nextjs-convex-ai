name: Deploy to Cloudflare

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 18
  BUN_VERSION: 1.1.0

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Run TypeScript check
        run: bun run typecheck

      - name: Run linting
        run: bun run lint

      - name: Run tests
        run: bun run test

      - name: Build application
        run: bun run build

  deploy-worker:
    name: Deploy Cloudflare Worker
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/workers/log-ingestion
          command: deploy --env production
          secrets: |
            UPSTASH_REDIS_REST_URL
            UPSTASH_REDIS_REST_TOKEN

  deploy-pages:
    name: Deploy Cloudflare Pages
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Build for Pages
        run: bun run build:pages
        env:
          CI: true
          NEXT_PUBLIC_CONVEX_URL: ${{ secrets.NEXT_PUBLIC_CONVEX_URL }}
          NEXT_PUBLIC_BETTER_AUTH_URL: ${{ secrets.NEXT_PUBLIC_BETTER_AUTH_URL }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/web/dist --project-name=starter-nextjs-convex-ai

  health-check:
    name: Post-Deployment Health Check
    needs: [deploy-worker, deploy-pages]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deployment propagation
        run: sleep 60

      - name: Check Pages deployment
        run: |
          curl -f https://starter-nextjs-convex-ai.pages.dev/api/health || exit 1

      - name: Check Worker deployment
        run: |
          curl -f https://log-ingestion-worker.tonyoconnell.workers.dev/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "Pages: https://starter-nextjs-convex-ai.pages.dev"
          echo "Worker: https://log-ingestion-worker.tonyoconnell.workers.dev"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Deployment health check failed!"
          exit 1